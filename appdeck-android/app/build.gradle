/*buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}*/
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    maven {
        url 'https://download.01.org/crosswalk/releases/crosswalk/android/maven2'
    }
    maven { url 'https://maven.fabric.io/public' }

    maven { url "https://jitpack.io" }

    flatDir {
        dirs 'libs'
    }

    jcenter()
}

android {
    compileSdkVersion 23

    // http://tools.android.com/release
    buildToolsVersion '23.0.3'

    defaultConfig {
        applicationId "com.mobideck.appdeck"

        minSdkVersion 15
        targetSdkVersion 22
        versionCode 70
        versionName "1.7.0"

        // Enabling multidex support.
        multiDexEnabled true

    }

    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude '.readme'
    }

    productFlavors {
        crosswalk {
            dimension "webview"
            // 15 by default, set 21 for faster build time
            minSdkVersion 15
            versionCode = 1
        }
        chromium {
            dimension "webview"
            // 19 by default, set 21 for faster build time
            minSdkVersion 19
            versionCode = 2
        }
    }

    splits {
        abi {
            enable true // enable ABI split feature to create one APK per ABI
            reset()
            include 'x86', 'armeabi-v7a'//, 'mips'
            universalApk true // generate an additional APK that targets all the ABIs
        }
    }

    // map for the version code
    project.ext.versionCodes = ['armeabi':1, 'armeabi-v7a':2, 'arm64-v8a':3, 'mips':5, 'mips64':6, 'x86':8, 'x86_64':9]

    android.applicationVariants.all { variant ->
        // assign different version code for each output
        variant.outputs.each { output ->
            output.versionCodeOverride =
                    android.defaultConfig.versionCode * 10000 + variant.productFlavors.get(0).versionCode * 100 + project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0)
        }
    }

    dexOptions {
        //jumboMode true
        javaMaxHeapSize "4g"

        // smaller build time
        incremental false // make rebuild failed at launch with You need to use a Theme.AppCompat theme (or descendant) with this activity.
        preDexLibraries false// make rebuild failed at launch with You need to use a Theme.AppCompat theme (or descendant) with this activity.
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false


            // enable to validate proguard
            /*minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-xwalk.pro'*/

        }
        release {
            minifyEnabled true
            shrinkResources false
            zipAlignEnabled true
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-xwalk.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-xwalk.pro'
        }
    }

    useLibrary 'org.apache.http.legacy'


/*    aaptOptions {
        noCompress 'icudtl.dat', 'natives_blob.bin', 'snapshot_blob.bin', 'chrome_100_percent.pak', 'resources.pak'
    }*/
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // http://developer.android.com/tools/building/multidex.html
    compile 'com.android.support:multidex:1.0.1'

    // http://developer.android.com/tools/support-library/index.html
    //compile 'com.android.support:appcompat-v7:23.3.0'
    //compile 'com.android.support:support-v4:23.3.0'
    compile 'com.android.support:design:23.4.0'

    // https://developers.google.com/android/guides/setup
    compile 'com.google.android.gms:play-services-analytics:8.4.0'
    compile 'com.google.android.gms:play-services-gcm:8.4.0'
    compile 'com.google.android.gms:play-services-ads:8.4.0'
    //compile 'com.google.android.gms:play-services-appindexing:8.1.0'

    // https://github.com/chrisbanes/PhotoView
    compile 'com.github.chrisbanes:PhotoView:1.2.6'

    // https://github.com/loopj/android-async-http
    compile 'com.loopj.android:android-async-http:1.4.9'

    // https://download.01.org/crosswalk/releases/crosswalk/android/maven2/org/xwalk/xwalk_core_library/
    crosswalkCompile 'org.xwalk:xwalk_core_library:15.44.384.13'
    //crosswalkCompile 'org.xwalk:xwalk_core_library:16.45.421.19' // not compatible with genymotion
    //crosswalkCompile 'org.xwalk:xwalk_core_library:17.46.448.10' // not compatible with genymotion
    //crosswalkCompile 'org.xwalk:xwalk_core_library:18.48.477.13' // XWalkSettings not found

    // https://fabric.io/kits/android/crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    // https://fabric.io/kits/android/twitterkit
    // https://twittersdk.artifactoryonline.com/twittersdk/public/com/twitter/sdk/android/twitter-core/
    compile('com.twitter.sdk.android:twitter-core:1.6.5') {
        transitive = true
        exclude module: 'gson';
    }

    // https://fabric.io/kits/android/mopub
    compile('com.mopub:mopub-sdk:4.5.1@aar') {
        transitive = true
    }

    // https://developers.facebook.com/docs/android
    compile 'com.facebook.android:facebook-android-sdk:4.11.0'

    // https://github.com/hotchemi/Android-Rate
    compile 'com.github.hotchemi:android-rate:1.0.1'

    // http://info.widespace.com/publishers/integrations/android-sdk-guidelines/
    compile 'com.widespace:widespace-sdk-4.7.1@aar'
    compile 'org.slf4j:slf4j-android:1.7.10' // widespace dependency


    //compile 'com.github.navasmdc:MaterialDesign:1.5@aar'
    //compile 'com.github.vajro:MaterialDesignLibrary:1.6'
    //compile 'com.nineoldandroids:library:2.4.0'

    // https://github.com/nostra13/Android-Universal-Image-Loader
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'


    //compile 'com.jakewharton.timber:timber:4.1.0'

    // https://github.com/afollestad/material-dialogs
    compile('com.github.afollestad.material-dialogs:core:0.8.5.8@aar') {
        transitive = true
    }

    /*compile('com.github.afollestad.material-dialogs:commons:0.8.5.3@aar') {
        transitive = true
    }*/

    // http://mvnrepository.com/artifact/com.google.code.gson/gson
    compile 'com.google.code.gson:gson:2.6.2'

    //compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.3.0'

    //compile 'io.branch.sdk.android:library:1.+'

    // millenial media
    compile 'com.millennialmedia:mm-ad-sdk@aar'

    compile 'net.grunt:gruntlib-0.1.7@aar'

    // https://github.com/google/guava#latest-release
    //compile 'com.google.guava:guava:19.0'

    //compile group: 'org.littleshoot', name: 'littleproxy', version: '1.1.0-beta2'

    // in libs
    // aerserv: 2.33.0: https://support.aerserv.com/hc/en-us/articles/204159160-Android-SDK-Integration-Version-2-30
    // amazonAds: 5.7.1.1 https://developer.amazon.com/public/resources/development-tools/sdk

    // begin appdeck plugin

    compile 'com.github.mobideck:appdeck-android-iap:master-SNAPSHOT'

    // end appdeck plugin
}

preBuild.doFirst {
    // Download embed assets
    println "php extra/embedresources_android_studio.php build".execute(null, new File(".")).text
}

clean.doFirst {
    println "php extra/embedresources_android_studio.php clean".execute(null, new File(".")).text
}
